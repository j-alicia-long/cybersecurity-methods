
challenge3.exe:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 03                	add    %al,(%ebx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 02                	add    %al,(%edx)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 00                	add    %al,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 a5 0f 4b dc 48    	add    %ah,0x48dc4b0f(%ebp)
 804819d:	4c                   	dec    %esp
 804819e:	59                   	pop    %ecx
 804819f:	26 be 59 7f 7a f7    	es mov $0xf77a7f59,%esi
 80481a5:	33 87 0a bf 3d c8    	xor    -0x37c240f6(%edi),%eax
 80481ab:	99                   	cltd   

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	08 00                	or     %al,(%eax)
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 08                	add    %cl,(%eax)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1a4>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	33 00                	xor    (%eax),%eax
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	24 00                	and    $0x0,%al
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	2b 00                	sub    (%eax),%eax
	...
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	1f                   	pop    %ds
	...
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 12                	add    %dl,(%edx)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 58 00             	add    %bl,0x0(%eax)
	...
 8048226:	00 00                	add    %al,(%eax)
 8048228:	20 00                	and    %al,(%eax)
 804822a:	00 00                	add    %al,(%eax)
 804822c:	1a 00                	sbb    (%eax),%al
	...
 8048236:	00 00                	add    %al,(%eax)
 8048238:	12 00                	adc    (%eax),%al
 804823a:	00 00                	add    %al,(%eax)
 804823c:	3c 00                	cmp    $0x0,%al
	...
 8048246:	00 00                	add    %al,(%eax)
 8048248:	12 00                	adc    (%eax),%al
 804824a:	00 00                	add    %al,(%eax)
 804824c:	0b 00                	or     (%eax),%eax
 804824e:	00 00                	add    %al,(%eax)
 8048250:	9c                   	pushf  
 8048251:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8048254:	04 00                	add    $0x0,%al
 8048256:	00 00                	add    %al,(%eax)
 8048258:	11 00                	adc    %eax,(%eax)
 804825a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0804825c <.dynstr>:
 804825c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048260:	63 2e                	arpl   %bp,(%esi)
 8048262:	73 6f                	jae    80482d3 <_init-0x5d>
 8048264:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048269:	4f                   	dec    %edi
 804826a:	5f                   	pop    %edi
 804826b:	73 74                	jae    80482e1 <_init-0x4f>
 804826d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048274:	64 
 8048275:	00 65 78             	add    %ah,0x78(%ebp)
 8048278:	69 74 00 70 75 74 73 	imul   $0x737475,0x70(%eax,%eax,1),%esi
 804827f:	00 
 8048280:	70 72                	jo     80482f4 <_init-0x3c>
 8048282:	69 6e 74 66 00 67 65 	imul   $0x65670066,0x74(%esi),%ebp
 8048289:	74 63                	je     80482ee <_init-0x42>
 804828b:	68 61 72 00 6d       	push   $0x6d007261
 8048290:	70 72                	jo     8048304 <_init-0x2c>
 8048292:	6f                   	outsl  %ds:(%esi),(%dx)
 8048293:	74 65                	je     80482fa <_init-0x36>
 8048295:	63 74 00 5f          	arpl   %si,0x5f(%eax,%eax,1)
 8048299:	5f                   	pop    %edi
 804829a:	6c                   	insb   (%dx),%es:(%edi)
 804829b:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80482a2:	72 74                	jb     8048318 <_init-0x18>
 80482a4:	5f                   	pop    %edi
 80482a5:	6d                   	insl   (%dx),%es:(%edi)
 80482a6:	61                   	popa   
 80482a7:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 80482ae:	43                   	inc    %ebx
 80482af:	5f                   	pop    %edi
 80482b0:	32 2e                	xor    (%esi),%ch
 80482b2:	30 00                	xor    %al,(%eax)
 80482b4:	5f                   	pop    %edi
 80482b5:	5f                   	pop    %edi
 80482b6:	67 6d                	insl   (%dx),%es:(%di)
 80482b8:	6f                   	outsl  %ds:(%esi),(%dx)
 80482b9:	6e                   	outsb  %ds:(%esi),(%dx)
 80482ba:	5f                   	pop    %edi
 80482bb:	73 74                	jae    8048331 <_init+0x1>
 80482bd:	61                   	popa   
 80482be:	72 74                	jb     8048334 <_init+0x4>
 80482c0:	5f                   	pop    %edi
 80482c1:	5f                   	pop    %edi
	...

Disassembly of section .gnu.version:

080482c4 <.gnu.version>:
 80482c4:	00 00                	add    %al,(%eax)
 80482c6:	02 00                	add    (%eax),%al
 80482c8:	02 00                	add    (%eax),%al
 80482ca:	02 00                	add    (%eax),%al
 80482cc:	02 00                	add    (%eax),%al
 80482ce:	00 00                	add    %al,(%eax)
 80482d0:	02 00                	add    (%eax),%al
 80482d2:	02 00                	add    (%eax),%al
 80482d4:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080482d8 <.gnu.version_r>:
 80482d8:	01 00                	add    %eax,(%eax)
 80482da:	01 00                	add    %eax,(%eax)
 80482dc:	01 00                	add    %eax,(%eax)
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	10 00                	adc    %al,(%eax)
 80482e2:	00 00                	add    %al,(%eax)
 80482e4:	00 00                	add    %al,(%eax)
 80482e6:	00 00                	add    %al,(%eax)
 80482e8:	10 69 69             	adc    %ch,0x69(%ecx)
 80482eb:	0d 00 00 02 00       	or     $0x20000,%eax
 80482f0:	4e                   	dec    %esi
 80482f1:	00 00                	add    %al,(%eax)
 80482f3:	00 00                	add    %al,(%eax)
 80482f5:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482f8 <.rel.dyn>:
 80482f8:	fc                   	cld    
 80482f9:	9f                   	lahf   
 80482fa:	04 08                	add    $0x8,%al
 80482fc:	06                   	push   %es
 80482fd:	05                   	.byte 0x5
	...

Disassembly of section .rel.plt:

08048300 <.rel.plt>:
 8048300:	0c a0                	or     $0xa0,%al
 8048302:	04 08                	add    $0x8,%al
 8048304:	07                   	pop    %es
 8048305:	01 00                	add    %eax,(%eax)
 8048307:	00 10                	add    %dl,(%eax)
 8048309:	a0 04 08 07 02       	mov    0x2070804,%al
 804830e:	00 00                	add    %al,(%eax)
 8048310:	14 a0                	adc    $0xa0,%al
 8048312:	04 08                	add    $0x8,%al
 8048314:	07                   	pop    %es
 8048315:	03 00                	add    (%eax),%eax
 8048317:	00 18                	add    %bl,(%eax)
 8048319:	a0 04 08 07 04       	mov    0x4070804,%al
 804831e:	00 00                	add    %al,(%eax)
 8048320:	1c a0                	sbb    $0xa0,%al
 8048322:	04 08                	add    $0x8,%al
 8048324:	07                   	pop    %es
 8048325:	06                   	push   %es
 8048326:	00 00                	add    %al,(%eax)
 8048328:	20 a0 04 08 07 07    	and    %ah,0x7070804(%eax)
	...

Disassembly of section .init:

08048330 <_init>:
 8048330:	53                   	push   %ebx
 8048331:	83 ec 08             	sub    $0x8,%esp
 8048334:	e8 f7 00 00 00       	call   8048430 <__x86.get_pc_thunk.bx>
 8048339:	81 c3 c7 1c 00 00    	add    $0x1cc7,%ebx
 804833f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048345:	85 c0                	test   %eax,%eax
 8048347:	74 05                	je     804834e <_init+0x1e>
 8048349:	e8 82 00 00 00       	call   80483d0 <__gmon_start__@plt>
 804834e:	83 c4 08             	add    $0x8,%esp
 8048351:	5b                   	pop    %ebx
 8048352:	c3                   	ret    

Disassembly of section .plt:

08048360 <.plt>:
 8048360:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048366:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804836c:	00 00                	add    %al,(%eax)
	...

08048370 <mprotect@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048376:	68 00 00 00 00       	push   $0x0
 804837b:	e9 e0 ff ff ff       	jmp    8048360 <.plt>

08048380 <printf@plt>:
 8048380:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048386:	68 08 00 00 00       	push   $0x8
 804838b:	e9 d0 ff ff ff       	jmp    8048360 <.plt>

08048390 <getchar@plt>:
 8048390:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048396:	68 10 00 00 00       	push   $0x10
 804839b:	e9 c0 ff ff ff       	jmp    8048360 <.plt>

080483a0 <puts@plt>:
 80483a0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483a6:	68 18 00 00 00       	push   $0x18
 80483ab:	e9 b0 ff ff ff       	jmp    8048360 <.plt>

080483b0 <exit@plt>:
 80483b0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483b6:	68 20 00 00 00       	push   $0x20
 80483bb:	e9 a0 ff ff ff       	jmp    8048360 <.plt>

080483c0 <__libc_start_main@plt>:
 80483c0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80483c6:	68 28 00 00 00       	push   $0x28
 80483cb:	e9 90 ff ff ff       	jmp    8048360 <.plt>

Disassembly of section .plt.got:

080483d0 <__gmon_start__@plt>:
 80483d0:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80483d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080483e0 <_start>:
 80483e0:	31 ed                	xor    %ebp,%ebp
 80483e2:	5e                   	pop    %esi
 80483e3:	89 e1                	mov    %esp,%ecx
 80483e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483e8:	50                   	push   %eax
 80483e9:	54                   	push   %esp
 80483ea:	52                   	push   %edx
 80483eb:	e8 23 00 00 00       	call   8048413 <_start+0x33>
 80483f0:	81 c3 10 1c 00 00    	add    $0x1c10,%ebx
 80483f6:	8d 83 80 e6 ff ff    	lea    -0x1980(%ebx),%eax
 80483fc:	50                   	push   %eax
 80483fd:	8d 83 20 e6 ff ff    	lea    -0x19e0(%ebx),%eax
 8048403:	50                   	push   %eax
 8048404:	51                   	push   %ecx
 8048405:	56                   	push   %esi
 8048406:	c7 c0 a5 85 04 08    	mov    $0x80485a5,%eax
 804840c:	50                   	push   %eax
 804840d:	e8 ae ff ff ff       	call   80483c0 <__libc_start_main@plt>
 8048412:	f4                   	hlt    
 8048413:	8b 1c 24             	mov    (%esp),%ebx
 8048416:	c3                   	ret    
 8048417:	66 90                	xchg   %ax,%ax
 8048419:	66 90                	xchg   %ax,%ax
 804841b:	66 90                	xchg   %ax,%ax
 804841d:	66 90                	xchg   %ax,%ax
 804841f:	90                   	nop

08048420 <_dl_relocate_static_pie>:
 8048420:	f3 c3                	repz ret 
 8048422:	66 90                	xchg   %ax,%ax
 8048424:	66 90                	xchg   %ax,%ax
 8048426:	66 90                	xchg   %ax,%ax
 8048428:	66 90                	xchg   %ax,%ax
 804842a:	66 90                	xchg   %ax,%ax
 804842c:	66 90                	xchg   %ax,%ax
 804842e:	66 90                	xchg   %ax,%ax

08048430 <__x86.get_pc_thunk.bx>:
 8048430:	8b 1c 24             	mov    (%esp),%ebx
 8048433:	c3                   	ret    
 8048434:	66 90                	xchg   %ax,%ax
 8048436:	66 90                	xchg   %ax,%ax
 8048438:	66 90                	xchg   %ax,%ax
 804843a:	66 90                	xchg   %ax,%ax
 804843c:	66 90                	xchg   %ax,%ax
 804843e:	66 90                	xchg   %ax,%ax

08048440 <deregister_tm_clones>:
 8048440:	b8 2c a0 04 08       	mov    $0x804a02c,%eax
 8048445:	3d 2c a0 04 08       	cmp    $0x804a02c,%eax
 804844a:	74 24                	je     8048470 <deregister_tm_clones+0x30>
 804844c:	b8 00 00 00 00       	mov    $0x0,%eax
 8048451:	85 c0                	test   %eax,%eax
 8048453:	74 1b                	je     8048470 <deregister_tm_clones+0x30>
 8048455:	55                   	push   %ebp
 8048456:	89 e5                	mov    %esp,%ebp
 8048458:	83 ec 14             	sub    $0x14,%esp
 804845b:	68 2c a0 04 08       	push   $0x804a02c
 8048460:	ff d0                	call   *%eax
 8048462:	83 c4 10             	add    $0x10,%esp
 8048465:	c9                   	leave  
 8048466:	c3                   	ret    
 8048467:	89 f6                	mov    %esi,%esi
 8048469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 8048470:	f3 c3                	repz ret 
 8048472:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048480 <register_tm_clones>:
 8048480:	b8 2c a0 04 08       	mov    $0x804a02c,%eax
 8048485:	2d 2c a0 04 08       	sub    $0x804a02c,%eax
 804848a:	c1 f8 02             	sar    $0x2,%eax
 804848d:	89 c2                	mov    %eax,%edx
 804848f:	c1 ea 1f             	shr    $0x1f,%edx
 8048492:	01 d0                	add    %edx,%eax
 8048494:	d1 f8                	sar    %eax
 8048496:	74 20                	je     80484b8 <register_tm_clones+0x38>
 8048498:	ba 00 00 00 00       	mov    $0x0,%edx
 804849d:	85 d2                	test   %edx,%edx
 804849f:	74 17                	je     80484b8 <register_tm_clones+0x38>
 80484a1:	55                   	push   %ebp
 80484a2:	89 e5                	mov    %esp,%ebp
 80484a4:	83 ec 10             	sub    $0x10,%esp
 80484a7:	50                   	push   %eax
 80484a8:	68 2c a0 04 08       	push   $0x804a02c
 80484ad:	ff d2                	call   *%edx
 80484af:	83 c4 10             	add    $0x10,%esp
 80484b2:	c9                   	leave  
 80484b3:	c3                   	ret    
 80484b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80484b8:	f3 c3                	repz ret 
 80484ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080484c0 <__do_global_dtors_aux>:
 80484c0:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 80484c7:	75 17                	jne    80484e0 <__do_global_dtors_aux+0x20>
 80484c9:	55                   	push   %ebp
 80484ca:	89 e5                	mov    %esp,%ebp
 80484cc:	83 ec 08             	sub    $0x8,%esp
 80484cf:	e8 6c ff ff ff       	call   8048440 <deregister_tm_clones>
 80484d4:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 80484db:	c9                   	leave  
 80484dc:	c3                   	ret    
 80484dd:	8d 76 00             	lea    0x0(%esi),%esi
 80484e0:	f3 c3                	repz ret 
 80484e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80484e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484f0 <frame_dummy>:
 80484f0:	55                   	push   %ebp
 80484f1:	89 e5                	mov    %esp,%ebp
 80484f3:	5d                   	pop    %ebp
 80484f4:	eb 8a                	jmp    8048480 <register_tm_clones>

080484f6 <readString>:
 80484f6:	55                   	push   %ebp
 80484f7:	89 e5                	mov    %esp,%ebp
 80484f9:	83 ec 58             	sub    $0x58,%esp
 80484fc:	e8 8f fe ff ff       	call   8048390 <getchar@plt>
 8048501:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048504:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 8048508:	74 21                	je     804852b <readString+0x35>
 804850a:	83 7d f4 0a          	cmpl   $0xa,-0xc(%ebp)
 804850e:	74 1b                	je     804852b <readString+0x35>
 8048510:	a1 48 a0 04 08       	mov    0x804a048,%eax
 8048515:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048518:	88 54 05 b4          	mov    %dl,-0x4c(%ebp,%eax,1)
 804851c:	a1 48 a0 04 08       	mov    0x804a048,%eax
 8048521:	83 c0 01             	add    $0x1,%eax
 8048524:	a3 48 a0 04 08       	mov    %eax,0x804a048
 8048529:	eb d1                	jmp    80484fc <readString+0x6>
 804852b:	a1 48 a0 04 08       	mov    0x804a048,%eax
 8048530:	c6 44 05 b4 00       	movb   $0x0,-0x4c(%ebp,%eax,1)
 8048535:	c7 05 48 a0 04 08 00 	movl   $0x0,0x804a048
 804853c:	00 00 00 
 804853f:	eb 26                	jmp    8048567 <readString+0x71>
 8048541:	a1 48 a0 04 08       	mov    0x804a048,%eax
 8048546:	8b 15 48 a0 04 08    	mov    0x804a048,%edx
 804854c:	89 d1                	mov    %edx,%ecx
 804854e:	8b 55 08             	mov    0x8(%ebp),%edx
 8048551:	01 ca                	add    %ecx,%edx
 8048553:	0f b6 44 05 b4       	movzbl -0x4c(%ebp,%eax,1),%eax
 8048558:	88 02                	mov    %al,(%edx)
 804855a:	a1 48 a0 04 08       	mov    0x804a048,%eax
 804855f:	83 c0 01             	add    $0x1,%eax
 8048562:	a3 48 a0 04 08       	mov    %eax,0x804a048
 8048567:	a1 48 a0 04 08       	mov    0x804a048,%eax
 804856c:	83 f8 3f             	cmp    $0x3f,%eax
 804856f:	7e d0                	jle    8048541 <readString+0x4b>
 8048571:	90                   	nop
 8048572:	c9                   	leave  
 8048573:	c3                   	ret    

08048574 <message>:
 8048574:	55                   	push   %ebp
 8048575:	89 e5                	mov    %esp,%ebp
 8048577:	83 ec 08             	sub    $0x8,%esp
 804857a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804857e:	74 12                	je     8048592 <message+0x1e>
 8048580:	83 ec 0c             	sub    $0xc,%esp
 8048583:	68 a0 86 04 08       	push   $0x80486a0
 8048588:	e8 13 fe ff ff       	call   80483a0 <puts@plt>
 804858d:	83 c4 10             	add    $0x10,%esp
 8048590:	eb 10                	jmp    80485a2 <message+0x2e>
 8048592:	83 ec 0c             	sub    $0xc,%esp
 8048595:	68 d4 86 04 08       	push   $0x80486d4
 804859a:	e8 01 fe ff ff       	call   80483a0 <puts@plt>
 804859f:	83 c4 10             	add    $0x10,%esp
 80485a2:	90                   	nop
 80485a3:	c9                   	leave  
 80485a4:	c3                   	ret    

080485a5 <main>:
 80485a5:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80485a9:	83 e4 f0             	and    $0xfffffff0,%esp
 80485ac:	ff 71 fc             	pushl  -0x4(%ecx)
 80485af:	55                   	push   %ebp
 80485b0:	89 e5                	mov    %esp,%ebp
 80485b2:	51                   	push   %ecx
 80485b3:	83 ec 04             	sub    $0x4,%esp
 80485b6:	b8 80 a0 04 08       	mov    $0x804a080,%eax
 80485bb:	25 00 f0 ff ff       	and    $0xfffff000,%eax
 80485c0:	83 ec 04             	sub    $0x4,%esp
 80485c3:	6a 07                	push   $0x7
 80485c5:	6a 01                	push   $0x1
 80485c7:	50                   	push   %eax
 80485c8:	e8 a3 fd ff ff       	call   8048370 <mprotect@plt>
 80485cd:	83 c4 10             	add    $0x10,%esp
 80485d0:	83 ec 0c             	sub    $0xc,%esp
 80485d3:	68 80 a0 04 08       	push   $0x804a080
 80485d8:	e8 19 ff ff ff       	call   80484f6 <readString>
 80485dd:	83 c4 10             	add    $0x10,%esp
 80485e0:	83 ec 08             	sub    $0x8,%esp
 80485e3:	68 80 a0 04 08       	push   $0x804a080
 80485e8:	68 15 87 04 08       	push   $0x8048715
 80485ed:	e8 8e fd ff ff       	call   8048380 <printf@plt>
 80485f2:	83 c4 10             	add    $0x10,%esp
 80485f5:	a1 44 a0 04 08       	mov    0x804a044,%eax
 80485fa:	83 ec 0c             	sub    $0xc,%esp
 80485fd:	50                   	push   %eax
 80485fe:	e8 71 ff ff ff       	call   8048574 <message>
 8048603:	83 c4 10             	add    $0x10,%esp
 8048606:	83 ec 0c             	sub    $0xc,%esp
 8048609:	68 25 87 04 08       	push   $0x8048725
 804860e:	e8 8d fd ff ff       	call   80483a0 <puts@plt>
 8048613:	83 c4 10             	add    $0x10,%esp
 8048616:	83 ec 0c             	sub    $0xc,%esp
 8048619:	6a 00                	push   $0x0
 804861b:	e8 90 fd ff ff       	call   80483b0 <exit@plt>

08048620 <__libc_csu_init>:
 8048620:	55                   	push   %ebp
 8048621:	57                   	push   %edi
 8048622:	56                   	push   %esi
 8048623:	53                   	push   %ebx
 8048624:	e8 07 fe ff ff       	call   8048430 <__x86.get_pc_thunk.bx>
 8048629:	81 c3 d7 19 00 00    	add    $0x19d7,%ebx
 804862f:	83 ec 0c             	sub    $0xc,%esp
 8048632:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 8048636:	8d b3 10 ff ff ff    	lea    -0xf0(%ebx),%esi
 804863c:	e8 ef fc ff ff       	call   8048330 <_init>
 8048641:	8d 83 0c ff ff ff    	lea    -0xf4(%ebx),%eax
 8048647:	29 c6                	sub    %eax,%esi
 8048649:	c1 fe 02             	sar    $0x2,%esi
 804864c:	85 f6                	test   %esi,%esi
 804864e:	74 25                	je     8048675 <__libc_csu_init+0x55>
 8048650:	31 ff                	xor    %edi,%edi
 8048652:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048658:	83 ec 04             	sub    $0x4,%esp
 804865b:	55                   	push   %ebp
 804865c:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048660:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048664:	ff 94 bb 0c ff ff ff 	call   *-0xf4(%ebx,%edi,4)
 804866b:	83 c7 01             	add    $0x1,%edi
 804866e:	83 c4 10             	add    $0x10,%esp
 8048671:	39 fe                	cmp    %edi,%esi
 8048673:	75 e3                	jne    8048658 <__libc_csu_init+0x38>
 8048675:	83 c4 0c             	add    $0xc,%esp
 8048678:	5b                   	pop    %ebx
 8048679:	5e                   	pop    %esi
 804867a:	5f                   	pop    %edi
 804867b:	5d                   	pop    %ebp
 804867c:	c3                   	ret    
 804867d:	8d 76 00             	lea    0x0(%esi),%esi

08048680 <__libc_csu_fini>:
 8048680:	f3 c3                	repz ret 

Disassembly of section .fini:

08048684 <_fini>:
 8048684:	53                   	push   %ebx
 8048685:	83 ec 08             	sub    $0x8,%esp
 8048688:	e8 a3 fd ff ff       	call   8048430 <__x86.get_pc_thunk.bx>
 804868d:	81 c3 73 19 00 00    	add    $0x1973,%ebx
 8048693:	83 c4 08             	add    $0x8,%esp
 8048696:	5b                   	pop    %ebx
 8048697:	c3                   	ret    

Disassembly of section .rodata:

08048698 <_fp_hw>:
 8048698:	03 00                	add    (%eax),%eax
	...

0804869c <_IO_stdin_used>:
 804869c:	01 00                	add    %eax,(%eax)
 804869e:	02 00                	add    (%eax),%al
 80486a0:	43                   	inc    %ebx
 80486a1:	6f                   	outsl  %ds:(%esi),(%dx)
 80486a2:	6e                   	outsb  %ds:(%esi),(%dx)
 80486a3:	67 72 61             	addr16 jb 8048707 <_IO_stdin_used+0x6b>
 80486a6:	74 75                	je     804871d <_IO_stdin_used+0x81>
 80486a8:	6c                   	insb   (%dx),%es:(%edi)
 80486a9:	61                   	popa   
 80486aa:	74 69                	je     8048715 <_IO_stdin_used+0x79>
 80486ac:	6f                   	outsl  %ds:(%esi),(%dx)
 80486ad:	6e                   	outsb  %ds:(%esi),(%dx)
 80486ae:	73 2c                	jae    80486dc <_IO_stdin_used+0x40>
 80486b0:	20 79 6f             	and    %bh,0x6f(%ecx)
 80486b3:	75 20                	jne    80486d5 <_IO_stdin_used+0x39>
 80486b5:	68 61 76 65 20       	push   $0x20657661
 80486ba:	63 6f 6d             	arpl   %bp,0x6d(%edi)
 80486bd:	70 6c                	jo     804872b <_IO_stdin_used+0x8f>
 80486bf:	65 74 65             	gs je  8048727 <_IO_stdin_used+0x8b>
 80486c2:	64 20 74 68 69       	and    %dh,%fs:0x69(%eax,%ebp,2)
 80486c7:	73 20                	jae    80486e9 <_IO_stdin_used+0x4d>
 80486c9:	63 68 61             	arpl   %bp,0x61(%eax)
 80486cc:	6c                   	insb   (%dx),%es:(%edi)
 80486cd:	6c                   	insb   (%dx),%es:(%edi)
 80486ce:	65 6e                	outsb  %gs:(%esi),(%dx)
 80486d0:	67 65 2e 00 55 6e    	gs add %dl,%cs:0x6e(%di)
 80486d6:	66 6f                	outsw  %ds:(%esi),(%dx)
 80486d8:	72 74                	jb     804874e <__GNU_EH_FRAME_HDR+0x1e>
 80486da:	75 6e                	jne    804874a <__GNU_EH_FRAME_HDR+0x1a>
 80486dc:	61                   	popa   
 80486dd:	74 65                	je     8048744 <__GNU_EH_FRAME_HDR+0x14>
 80486df:	6c                   	insb   (%dx),%es:(%edi)
 80486e0:	79 2c                	jns    804870e <_IO_stdin_used+0x72>
 80486e2:	20 79 6f             	and    %bh,0x6f(%ecx)
 80486e5:	75 20                	jne    8048707 <_IO_stdin_used+0x6b>
 80486e7:	68 61 76 65 20       	push   $0x20657661
 80486ec:	6e                   	outsb  %ds:(%esi),(%dx)
 80486ed:	6f                   	outsl  %ds:(%esi),(%dx)
 80486ee:	74 20                	je     8048710 <_IO_stdin_used+0x74>
 80486f0:	63 6f 6d             	arpl   %bp,0x6d(%edi)
 80486f3:	70 6c                	jo     8048761 <__GNU_EH_FRAME_HDR+0x31>
 80486f5:	65 74 65             	gs je  804875d <__GNU_EH_FRAME_HDR+0x2d>
 80486f8:	64 20 74 68 69       	and    %dh,%fs:0x69(%eax,%ebp,2)
 80486fd:	73 20                	jae    804871f <_IO_stdin_used+0x83>
 80486ff:	63 68 61             	arpl   %bp,0x61(%eax)
 8048702:	6c                   	insb   (%dx),%es:(%edi)
 8048703:	6c                   	insb   (%dx),%es:(%edi)
 8048704:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048706:	67 65 2e 20 54 72    	gs and %dl,%cs:0x72(%si)
 804870c:	79 20                	jns    804872e <_IO_stdin_used+0x92>
 804870e:	61                   	popa   
 804870f:	67 61                	addr16 popa 
 8048711:	69 6e 2e 00 54 68 61 	imul   $0x61685400,0x2e(%esi),%ebp
 8048718:	6e                   	outsb  %ds:(%esi),(%dx)
 8048719:	6b 20 79             	imul   $0x79,(%eax),%esp
 804871c:	6f                   	outsl  %ds:(%esi),(%dx)
 804871d:	75 2c                	jne    804874b <__GNU_EH_FRAME_HDR+0x1b>
 804871f:	20 25 73 2e 0a 00    	and    %ah,0xa2e73
 8048725:	45                   	inc    %ebp
 8048726:	78 69                	js     8048791 <__GNU_EH_FRAME_HDR+0x61>
 8048728:	74 69                	je     8048793 <__GNU_EH_FRAME_HDR+0x63>
 804872a:	6e                   	outsb  %ds:(%esi),(%dx)
 804872b:	67                   	addr16
	...

Disassembly of section .eh_frame_hdr:

08048730 <__GNU_EH_FRAME_HDR>:
 8048730:	01 1b                	add    %ebx,(%ebx)
 8048732:	03 3b                	add    (%ebx),%edi
 8048734:	48                   	dec    %eax
 8048735:	00 00                	add    %al,(%eax)
 8048737:	00 08                	add    %cl,(%eax)
 8048739:	00 00                	add    %al,(%eax)
 804873b:	00 30                	add    %dh,(%eax)
 804873d:	fc                   	cld    
 804873e:	ff                   	(bad)  
 804873f:	ff                   	(bad)  
 8048740:	78 00                	js     8048742 <__GNU_EH_FRAME_HDR+0x12>
 8048742:	00 00                	add    %al,(%eax)
 8048744:	a0 fc ff ff 9c       	mov    0x9cfffffc,%al
 8048749:	00 00                	add    %al,(%eax)
 804874b:	00 f0                	add    %dh,%al
 804874d:	fc                   	cld    
 804874e:	ff                   	(bad)  
 804874f:	ff 64 00 00          	jmp    *0x0(%eax,%eax,1)
 8048753:	00 c6                	add    %al,%dh
 8048755:	fd                   	std    
 8048756:	ff                   	(bad)  
 8048757:	ff b0 00 00 00 44    	pushl  0x44000000(%eax)
 804875d:	fe                   	(bad)  
 804875e:	ff                   	(bad)  
 804875f:	ff d0                	call   *%eax
 8048761:	00 00                	add    %al,(%eax)
 8048763:	00 75 fe             	add    %dh,-0x2(%ebp)
 8048766:	ff                   	(bad)  
 8048767:	ff f0                	push   %eax
 8048769:	00 00                	add    %al,(%eax)
 804876b:	00 f0                	add    %dh,%al
 804876d:	fe                   	(bad)  
 804876e:	ff                   	(bad)  
 804876f:	ff 14 01             	call   *(%ecx,%eax,1)
 8048772:	00 00                	add    %al,(%eax)
 8048774:	50                   	push   %eax
 8048775:	ff                   	(bad)  
 8048776:	ff                   	(bad)  
 8048777:	ff 60 01             	jmp    *0x1(%eax)
	...

Disassembly of section .eh_frame:

0804877c <__FRAME_END__-0x128>:
 804877c:	14 00                	adc    $0x0,%al
 804877e:	00 00                	add    %al,(%eax)
 8048780:	00 00                	add    %al,(%eax)
 8048782:	00 00                	add    %al,(%eax)
 8048784:	01 7a 52             	add    %edi,0x52(%edx)
 8048787:	00 01                	add    %al,(%ecx)
 8048789:	7c 08                	jl     8048793 <__GNU_EH_FRAME_HDR+0x63>
 804878b:	01 1b                	add    %ebx,(%ebx)
 804878d:	0c 04                	or     $0x4,%al
 804878f:	04 88                	add    $0x88,%al
 8048791:	01 00                	add    %eax,(%eax)
 8048793:	00 10                	add    %dl,(%eax)
 8048795:	00 00                	add    %al,(%eax)
 8048797:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804879a:	00 00                	add    %al,(%eax)
 804879c:	84 fc                	test   %bh,%ah
 804879e:	ff                   	(bad)  
 804879f:	ff 02                	incl   (%edx)
 80487a1:	00 00                	add    %al,(%eax)
 80487a3:	00 00                	add    %al,(%eax)
 80487a5:	00 00                	add    %al,(%eax)
 80487a7:	00 20                	add    %ah,(%eax)
 80487a9:	00 00                	add    %al,(%eax)
 80487ab:	00 30                	add    %dh,(%eax)
 80487ad:	00 00                	add    %al,(%eax)
 80487af:	00 b0 fb ff ff 70    	add    %dh,0x70fffffb(%eax)
 80487b5:	00 00                	add    %al,(%eax)
 80487b7:	00 00                	add    %al,(%eax)
 80487b9:	0e                   	push   %cs
 80487ba:	08 46 0e             	or     %al,0xe(%esi)
 80487bd:	0c 4a                	or     $0x4a,%al
 80487bf:	0f 0b                	ud2    
 80487c1:	74 04                	je     80487c7 <__GNU_EH_FRAME_HDR+0x97>
 80487c3:	78 00                	js     80487c5 <__GNU_EH_FRAME_HDR+0x95>
 80487c5:	3f                   	aas    
 80487c6:	1a 3b                	sbb    (%ebx),%bh
 80487c8:	2a 32                	sub    (%edx),%dh
 80487ca:	24 22                	and    $0x22,%al
 80487cc:	10 00                	adc    %al,(%eax)
 80487ce:	00 00                	add    %al,(%eax)
 80487d0:	54                   	push   %esp
 80487d1:	00 00                	add    %al,(%eax)
 80487d3:	00 fc                	add    %bh,%ah
 80487d5:	fb                   	sti    
 80487d6:	ff                   	(bad)  
 80487d7:	ff 08                	decl   (%eax)
 80487d9:	00 00                	add    %al,(%eax)
 80487db:	00 00                	add    %al,(%eax)
 80487dd:	00 00                	add    %al,(%eax)
 80487df:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80487e2:	00 00                	add    %al,(%eax)
 80487e4:	68 00 00 00 0e       	push   $0xe000000
 80487e9:	fd                   	std    
 80487ea:	ff                   	(bad)  
 80487eb:	ff                   	(bad)  
 80487ec:	7e 00                	jle    80487ee <__GNU_EH_FRAME_HDR+0xbe>
 80487ee:	00 00                	add    %al,(%eax)
 80487f0:	00 41 0e             	add    %al,0xe(%ecx)
 80487f3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80487f9:	02 7a c5             	add    -0x3b(%edx),%bh
 80487fc:	0c 04                	or     $0x4,%al
 80487fe:	04 00                	add    $0x0,%al
 8048800:	1c 00                	sbb    $0x0,%al
 8048802:	00 00                	add    %al,(%eax)
 8048804:	88 00                	mov    %al,(%eax)
 8048806:	00 00                	add    %al,(%eax)
 8048808:	6c                   	insb   (%dx),%es:(%edi)
 8048809:	fd                   	std    
 804880a:	ff                   	(bad)  
 804880b:	ff 31                	pushl  (%ecx)
 804880d:	00 00                	add    %al,(%eax)
 804880f:	00 00                	add    %al,(%eax)
 8048811:	41                   	inc    %ecx
 8048812:	0e                   	push   %cs
 8048813:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048819:	6d                   	insl   (%dx),%es:(%edi)
 804881a:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 804881d:	04 00                	add    $0x0,%al
 804881f:	00 20                	add    %ah,(%eax)
 8048821:	00 00                	add    %al,(%eax)
 8048823:	00 a8 00 00 00 7d    	add    %ch,0x7d000000(%eax)
 8048829:	fd                   	std    
 804882a:	ff                   	(bad)  
 804882b:	ff                   	(bad)  
 804882c:	7b 00                	jnp    804882e <__GNU_EH_FRAME_HDR+0xfe>
 804882e:	00 00                	add    %al,(%eax)
 8048830:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
 8048834:	00 47 10             	add    %al,0x10(%edi)
 8048837:	05 02 75 00 43       	add    $0x43007502,%eax
 804883c:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 8048840:	06                   	push   %es
 8048841:	00 00                	add    %al,(%eax)
 8048843:	00 48 00             	add    %cl,0x0(%eax)
 8048846:	00 00                	add    %al,(%eax)
 8048848:	cc                   	int3   
 8048849:	00 00                	add    %al,(%eax)
 804884b:	00 d4                	add    %dl,%ah
 804884d:	fd                   	std    
 804884e:	ff                   	(bad)  
 804884f:	ff 5d 00             	lcall  *0x0(%ebp)
 8048852:	00 00                	add    %al,(%eax)
 8048854:	00 41 0e             	add    %al,0xe(%ecx)
 8048857:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804885d:	87 03                	xchg   %eax,(%ebx)
 804885f:	41                   	inc    %ecx
 8048860:	0e                   	push   %cs
 8048861:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048867:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 804886e:	24 41                	and    $0x41,%al
 8048870:	0e                   	push   %cs
 8048871:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048875:	44                   	inc    %esp
 8048876:	0e                   	push   %cs
 8048877:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804887a:	20 47 0e             	and    %al,0xe(%edi)
 804887d:	14 41                	adc    $0x41,%al
 804887f:	c3                   	ret    
 8048880:	0e                   	push   %cs
 8048881:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048884:	0e                   	push   %cs
 8048885:	0c 41                	or     $0x41,%al
 8048887:	c7                   	(bad)  
 8048888:	0e                   	push   %cs
 8048889:	08 41 c5             	or     %al,-0x3b(%ecx)
 804888c:	0e                   	push   %cs
 804888d:	04 00                	add    $0x0,%al
 804888f:	00 10                	add    %dl,(%eax)
 8048891:	00 00                	add    %al,(%eax)
 8048893:	00 18                	add    %bl,(%eax)
 8048895:	01 00                	add    %eax,(%eax)
 8048897:	00 e8                	add    %ch,%al
 8048899:	fd                   	std    
 804889a:	ff                   	(bad)  
 804889b:	ff 02                	incl   (%edx)
 804889d:	00 00                	add    %al,(%eax)
 804889f:	00 00                	add    %al,(%eax)
 80488a1:	00 00                	add    %al,(%eax)
	...

080488a4 <__FRAME_END__>:
 80488a4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f0c <__frame_dummy_init_array_entry>:
 8049f0c:	f0 84 04 08          	lock test %al,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f10 <__do_global_dtors_aux_fini_array_entry>:
 8049f10:	c0                   	.byte 0xc0
 8049f11:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	30 83 04 08 0d 00    	xor    %al,0xd0804(%ebx)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	84 86 04 08 19 00    	test   %al,0x190804(%esi)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 9f                	or     $0x9f,%al
 8049f32:	04 08                	add    $0x8,%al
 8049f34:	1b 00                	sbb    (%eax),%eax
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	10 9f 04 08 1c 00    	adc    %bl,0x1c0804(%edi)
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	5c                   	pop    %esp
 8049f59:	82 04 08 06          	addb   $0x6,(%eax,%ecx,1)
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	67 00 00             	add    %al,(%bx,%si)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	30 00                	xor    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 00                	add    %al,(%eax)
 8049f99:	83 04 08 11          	addl   $0x11,(%eax,%ecx,1)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 f8                	add    %bh,%al
 8049fa1:	82 04 08 12          	addb   $0x12,(%eax,%ecx,1)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 08                	add    %cl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f d8             	ljmp   *-0x28(%edi)
 8049fb9:	82 04 08 ff          	addb   $0xff,(%eax,%ecx,1)
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f c4             	ljmp   *-0x3c(%edi)
 8049fc9:	82 04 08 00          	addb   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	76 83                	jbe    8049f91 <_DYNAMIC+0x7d>
 804a00e:	04 08                	add    $0x8,%al
 804a010:	86 83 04 08 96 83    	xchg   %al,-0x7c69f7fc(%ebx)
 804a016:	04 08                	add    $0x8,%al
 804a018:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a019:	83 04 08 b6          	addl   $0xffffffb6,(%eax,%ecx,1)
 804a01d:	83 04 08 c6          	addl   $0xffffffc6,(%eax,%ecx,1)
 804a021:	83                   	.byte 0x83
 804a022:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a024 <__data_start>:
 804a024:	00 00                	add    %al,(%eax)
	...

0804a028 <__dso_handle>:
 804a028:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a040 <completed.7281>:
 804a040:	00 00                	add    %al,(%eax)
	...

0804a044 <completed>:
 804a044:	00 00                	add    %al,(%eax)
	...

0804a048 <i>:
	...

0804a060 <f>:
	...

0804a080 <Name>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x80482b8>
   a:	74 75                	je     81 <_init-0x80482af>
   c:	20 37                	and    %dh,(%edi)
   e:	2e 33 2e             	xor    %cs:(%esi),%ebp
  11:	30 2d 31 36 75 62    	xor    %ch,0x62753631
  17:	75 6e                	jne    87 <_init-0x80482a9>
  19:	74 75                	je     90 <_init-0x80482a0>
  1b:	33 29                	xor    (%ecx),%ebp
  1d:	20 37                	and    %dh,(%edi)
  1f:	2e 33 2e             	xor    %cs:(%esi),%ebp
  22:	30 00                	xor    %al,(%eax)
