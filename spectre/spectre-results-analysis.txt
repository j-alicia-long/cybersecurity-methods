Jennifer Long
CS 4630
HW 7: Spectre V1 and V2
11/5/2018

Spectre Variant 1 Process
Step 1: Observation
- First, I ran spectre.txt and observed the leaked output.
  It shows the username "dumbledore" and its ascii values in hex.
  Next, I went through the ghex file and searched for the ascii
  string for "dumbledore": 64 75 6D 62 6C 65 64 6F 72 65.
  I found that it is stored at address offset 000e61.

- I then looked at the spectre.exe symbol table by running

  objdump --syms spectre.exe > spectre_syms.txt

  I searched "username", and found that the address for this
  variable was 602148. Since strings are stored as char* arrays
  in C, we know that this is an address pointer.

- Looking at the main file objdump (objdump -D spectre.exe),
  I found that at the address 602148 was the address 610e40
  (400e61 in little endian). This confirms that this is where
  the username string value is stored.


Step 2: Leakage
- I went through the same process to find the password.
  I searched for "password" in the symbol table and found that
  the pointer was located at address 602140.

- Looking in the objdump at address 602140, the password address
  is 580e40 (400e58 in little endian)

- I instructed spectre.exe to read 20 bytes at address 400e58.
  This printed out a string including the password. I observed
  that there was a terminating byte, 0x00, after 8 bytes, so
  the password must be 8 bytes long: dd0rR0x!


Spectre Variant 2 Analysis

$ ./assignment-unsafe
hot   val: 2093836
probe val: 7249900
cold  val: 10361792
$ ./assignment-unsafe
hot   val: 2128896
probe val: 7374788
cold  val: 10482548
$ ./assignment-unsafe
hot   val: 2216884
probe val: 7062056
cold  val: 11424768
$ ./assignment-unsafe
hot   val: 2175444
probe val: 7172704
cold  val: 11041236
$ ./assignment-unsafe
hot   val: 2090288
probe val: 7339700
cold  val: 7490092

$ ./assignment-safe
hot   val: 2124725
probe val: 14980518
cold  val: 11078805
$ ./assignment-safe
hot   val: 2185046
probe val: 14871561
cold  val: 7814363
$ ./assignment-safe
hot   val: 2058378
probe val: 15177493
cold  val: 10036022
$ ./assignment-safe
hot   val: 2231016
probe val: 15501614
cold  val: 9241118
$ ./assignment-safe
hot   val: 2170824
probe val: 14719124
cold  val: 10841100

Analysis: On average, the probe_val fetch times of assignment-safe was over
2 times the amount of that of assignment-unsafe. It's taking longer to access
the values in cache, because the retpoline loop is discouraging the accesses.

